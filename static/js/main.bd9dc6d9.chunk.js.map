{"version":3,"sources":["components/Header.js","components/Footer.js","components/Home.js","components/Guest-user-form.js","components/SignIn.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Row","Col","Footer","Container","fluid","md","Home","Card","to","UserForm","history","useHistory","useState","firstname","midname","lastname","email","phone","address","city","zipcode","setValues","handleChange","event","target","name","value","FormControl","type","onChange","onClick","push","SignIn","InputGroup","Nav","NavLink","AccordionSelection","isCommnctonsVisible","setComunicationVisible","Accordion","Item","eventKey","Body","checked","e","currentTarget","ProfileCard","sm","href","size","Communications","channelPhone","setchannelPhone","channelMail","setchannelMail","channelTextMassage","setchannelTextMassage","channelAtSign","setchannelAtSign","SM_clicked","setSMClick","ToggleButtonGroup","ToggleButton","id","variant","SubCommuncations","subchannelPhone","setsubchannelPhone","subchannelTextMassage","setsubchannelTextMsg","subchannelAtSign","setsubchannelAtSign","ConsVehicl","setConsVehicl","MscEntrment","setMscEntrment","Dashboard","Navbar","Brand","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd9dc6d9.chunk.js","sourcesContent":["import {React} from 'react';\nimport {Row,Col} from 'react-bootstrap';\nfunction  Header(){\n    return (\n        <div className=\"header\">\n            <Row>\n                <Col> \n                 <div  className=\"logo\">\n                 </div>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Header;","import {React} from 'react';\nimport {Row,Col,Container} from 'react-bootstrap';\nfunction  Footer(){\n    return (\n        <Container fluid className=\"footer\">\n            <Row>\n                <Col md={true}>\n                    Privacy Policy | California Privacy | Legal Terms\n                </Col>\n                <Col md={true}>\n                    <div className=\"footer-r\">\n                        <div className=\"text-red\">Do NOT SELL MY PERSONAL IMFORMATION</div>\n                        <div>\n                            Cookie Consent Options\n                        </div>\n                    </div>\n                </Col>\n                <Col md={12}>\n                    <p>\n                    &copy;2011-2020 Toyota Motor Sales, U.S.A., Inc. All rights reserved. \n                    All information contained herein applies to vehicles registered in the 48 U.S.-contiguous \n                    and Alaska. Privacy Policy Terms of Use applies, the Apple logo and iPhone are trademarks \n                    of Apple Inc., registered in the U.S. and other countries. App Store is a service mark of \n                    Apple Inc. Google Play<sup>TM</sup> is a registered trademark of Google LLC.\n                    </p>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Footer;","import React  from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container,Row,Col,Card } from 'react-bootstrap';\nimport './Home.css';\nimport Header from './Header';\nimport Footer from './Footer';\nfunction Home() {\n  return (\n    <div className=\"home\">\n        <Header/>\n        <div className=\"home-body\">\n            <Card className=\"Card\">\n                <Container fluid=\"md\">\n                    <Row>\n                        <Col md={12} className=\"user-logo\">\n                            \n                        </Col>\n                        <Col md={12}> \n                                You can use your Lexus Drivers or Toyota Owners account information to log in.\n                        </Col>\n                        <Col md={12}> \n                                <Link to=\"/signin\" className=\"Signin-btn\">\n                                    Sign In\n                                </Link>\n                        </Col>\n                        <Col md={12}>\n                            <div className=\"or-seperation\">\n                                <hr/>\n                                <span>or</span>\n                                <hr/>\n                            </div>\n                        </Col>\n                        <Col md={12}>\n                            <Link to=\"/guest-details\" className=\"Guest-btn\">\n                                Continue as Guest\n                            </Link>\n                        </Col>\n                    </Row>\n                </Container>\n            </Card>\n        </div>\n       <Footer/>\n    </div>  \n  );\n}\n\nexport default Home;\n","import { React,useState } from 'react'; \nimport { Row,Col,Container,FormControl } from 'react-bootstrap';\nimport './Guest-user-form.css';\nimport  Header  from './Header';\nimport  Footer  from './Footer';\nimport { useHistory } from 'react-router-dom';\nfunction  UserForm(){\n    let history = useHistory();\n    const [{firstname,midname,lastname,email,phone,address,city,zipcode},setValues]=useState([]);\n   \n    const handleChange= (event)=>{\n\n        setValues({\n            [event.target.name]:event.target.value\n        })\n    }\n    const handleSubmit = ()=> {\n        history.push('/dashboard');\n    }\n    return (\n        <div className=\"home\">\n             <Header />\n             <Container fluid className=\"jumbotron\">  \n                 <div className=\"form-container\">\n                    <h5 className=\"heading\">Your Contact information</h5>\n                     \n                    <Row>\n                        <Col md={5}>\n                            <label>\n                            First Name<sup>*</sup>\n                            </label>\n                            <FormControl type=\"text\" name=\"firstname\" value={firstname} onChange={handleChange}></FormControl>\n                        </Col>\n                        <Col md={2}>\n                            <label>\n                                Mid initial\n                            </label>\n                            <FormControl type=\"text\" name=\"midname\" value={midname} onChange={handleChange}></FormControl>\n                        </Col>\n                        <Col md={5}>\n                            <label>\n                                Last Name<sup>*</sup>\n                            </label>\n                            <FormControl type=\"text\" name=\"lastname\" value={lastname} onChange={handleChange}></FormControl>\n                        </Col>\n                        <Col md={12}>\n                            <label>\n                                Email<sup>*</sup>\n                            </label>\n                            <FormControl type=\"email\" name=\"email\" value={email} onChange={handleChange}></FormControl>\n                        </Col>\n                        <Col md={12}>\n                            <label>\n                                Phone<sup>*</sup>\n                            </label>\n                            <FormControl type=\"text\" name=\"phone\" value={phone} onChange={handleChange}></FormControl>\n                        </Col>\n                        <Col md={12}>\n                            <label>\n                                Address<sup>*</sup>\n                            </label>\n                            <FormControl type=\"text\" name=\"address\" value={address} onChange={handleChange}></FormControl>\n                        </Col>\n                        <Col md={6}>\n                            <label>\n                                City<sup>*</sup>\n                            </label>\n                            <FormControl type=\"text\" name=\"city\" value={city} onChange={handleChange}></FormControl>\n                        </Col>\n                        <Col md={6}>\n                            <label>\n                                Zipcode<sup>*</sup>\n                            </label>\n                            <FormControl type=\"text\" name=\"zipcode\" value={zipcode} onChange={handleChange}></FormControl>\n                        </Col>\n                        <Col md={12}>\n                           <button className=\"btn btn-danger-submit\" onClick={handleSubmit} type=\"button\">Submit Request</button>\n                        </Col>\n                        <Col md={12} className=\"text-disclaimer\">\n                           <p><span className=\"text-red\">Disclaimer </span> : This information is only used to save the Preferences Settings</p>\n                        </Col>\n                    </Row>\n                     \n                 </div>\n             </Container>\n             <Footer />\n        </div>\n    )\n}\n\nexport default UserForm;","import React from 'react';\nimport './SignIn.css';\nimport { Container, InputGroup, Row, Col, NavLink, Nav } from 'react-bootstrap';\nfunction SignIn() {\n  // const [{userId},setUserId]=useState([]);\n  // const handleChange = (event)=>{\n  //     const target= event.target;\n  //     const {name,value}=target;\n  //     setUserId({\n  //         [name]:value\n  //     })\n  // }\n  // const handleClick = ()=>{\n  //     alert('clicked');\n  // }\n  return (\n    <Container fluid className=\"signin-container\">\n      <div className=\"signIn-sec\">\n        <span className=\"legend-label\">Owners</span>\n        <h2>Sign in</h2>\n        <Row>\n          <Col md={6} className=\"sec-left\">\n            <span className=\"or-sep\">or</span>\n            <InputGroup>\n              <label>\n                Use your email or mobile number\n              </label>\n              <input type=\"text\" className=\"form-control\"></input>\n            </InputGroup>\n            <Row>\n              <Col>\n                <button className=\"Sigin-btns Creat-acc\">\n                  Create account\n                </button>\n              </Col>\n              <Col>\n                <button className=\"Sigin-btns next-step\">\n                  Next step\n                </button>\n              </Col>\n            </Row>\n          </Col>\n          <Col md={6} className=\"sec-right\">\n            <label>Continue with Single Sign-On</label>\n            <div>\n              Continue with Apple\n            </div >\n            <div>\n              Continue with Google\n            </div>\n            <div>\n              Continue with Facebook\n            </div>\n          </Col>\n        </Row>\n        <Container fluid className=\"signin-footer\">\n          <div className=\"signin-footer-l\">You can use your Lexus Drivers or Toyota Owners account information to log in</div>\n          <div className=\"signin-footer-r\">\n            <Nav>\n              <NavLink>\n                Active Account\n              </NavLink>\n              <NavLink>\n                Support\n              </NavLink>\n            </Nav>\n          </div>\n        </Container>\n      </div>\n\n    </Container>\n  );\n}\n\nexport default SignIn;\n","import React, { useState } from 'react';\nimport './Dashboard.css';\nimport { FaCommentAlt, FaPhoneVolume, FaEnvelope, FaMinusCircle, FaPlusCircle, FaMapMarkerAlt } from 'react-icons/fa';\nimport { Row, Col, Container, Navbar, Accordion, FormControl, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\nimport Header from './Header';\nimport Footer from './Footer';\nconst AccordionSelection = () => {\n\n    const [isCommnctonsVisible, setComunicationVisible] = useState(false);\n\n    return (\n        <Accordion>\n            <Accordion.Item eventKey=\"0\">\n                <Accordion.Header><h5>Marketing </h5></Accordion.Header>\n                <Accordion.Body>\n                    <Row>\n                        <Col><h6>Would you like to receive marketing communications?</h6></Col>\n                        <Col>\n                            <label className=\"switch\">\n                                <input type=\"checkbox\" checked={isCommnctonsVisible} onChange={(e) => setComunicationVisible(e.currentTarget.checked)} />\n                                <span className=\"slider round\"></span>\n                            </label>\n                        </Col>\n                    </Row>\n                    {isCommnctonsVisible && <Communications />}\n                </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item eventKey=\"1\">\n                <Accordion.Header><h5>Survey</h5></Accordion.Header>\n                <Accordion.Body>\n                    Survey section\n                </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item eventKey=\"2\">\n                <Accordion.Header><h5>Services</h5></Accordion.Header>\n                <Accordion.Body>\n                    Service section\n                </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item eventKey=\"3\">\n                <Accordion.Header><h5>Category 4</h5></Accordion.Header>\n                <Accordion.Body>\n                    Category 4 Section\n                </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item eventKey=\"4\">\n                <Accordion.Header><h5>Category 5</h5></Accordion.Header>\n                <Accordion.Body>\n                    Category 5 Section\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n    )\n}\nconst ProfileCard = () => {\n    return (\n        <div className=\"profile-card\">\n            <h6>Your personal information</h6>\n            <Row>\n                <Col sm={3} className=\"info-card\">\n                    <span className=\"text-Color\"> John Smith </span><span>40392483</span>\n                </Col>\n                <Col sm={3} className=\"info-card\">\n                    <span>Email</span><span>john_smith@toyota.com </span><span><a href=\"#\">Add email</a></span>\n                </Col>\n                <Col sm={3} className=\"info-card\">\n                    <span> Primary </span> <span> (310)-699-0221 </span>\n                </Col>\n                <Col sm={3} className=\"info-card\">\n                    <span className=\"text-danger\"> <FaMapMarkerAlt size={20} /> </span> <span> 3002 carolwood LN Torrance, CA 90505-7110 </span>\n                </Col>\n            </Row>\n        </div>\n    )\n}\nconst Communications = () => {\n    const [channelPhone, setchannelPhone] = useState(false);\n    const [channelMail, setchannelMail] = useState(false);\n    const [channelTextMassage, setchannelTextMassage] = useState(false);\n    const [channelAtSign, setchannelAtSign] = useState(false);\n    const [SM_clicked, setSMClick] = useState(false);\n    return (\n        <div>\n            <Container fluid className=\"px-4\">\n                <ToggleButtonGroup type=\"checkbox\">\n                    <Row>\n                        <Col>\n                            <ToggleButton className=\"mt-2\"\n                                id=\"toggle-check-atsign\"\n                                type=\"checkbox\"\n                                variant={channelAtSign ? \"danger\" : \"light\"}\n                                checked={channelAtSign}\n                                value=\"1\"\n                                onChange={(e) => setchannelAtSign(e.currentTarget.checked)}\n                            >\n                                <i className=\"at-the-rate\"></i>\n                            </ToggleButton>\n                        </Col>\n                        <Col>\n                            <ToggleButton className=\"mt-2\"\n                                id=\"toggle-check-mail\"\n                                type=\"checkbox\"\n                                variant={channelMail ? \"danger\" : \"light\"}\n                                checked={channelMail}\n                                value=\"2\"\n                                onChange={(e) => setchannelMail(e.currentTarget.checked)}\n                            >\n                                <FaEnvelope />\n                            </ToggleButton>\n                        </Col>\n                        <Col>\n                            <ToggleButton className=\"mt-2\"\n                                id=\"toggle-check-phone\"\n                                type=\"checkbox\"\n                                variant={channelPhone ? \"danger\" : \"light\"}\n                                checked={channelPhone}\n                                value=\"3\"\n                                onChange={(e) => setchannelPhone(e.currentTarget.checked)}\n                            >\n                                <FaPhoneVolume />\n                            </ToggleButton>\n                        </Col>\n                        <Col>\n                            <ToggleButton className=\"mt-2\"\n                                id=\"toggle-check-textmsg\"\n                                type=\"checkbox\"\n                                variant={channelTextMassage ? \"danger\" : \"light\"}\n                                checked={channelTextMassage}\n                                value=\"4\"\n                                onChange={(e) => setchannelTextMassage(e.currentTarget.checked)}\n                            >\n                                <FaCommentAlt />\n                            </ToggleButton>\n                        </Col>\n                    </Row>\n                </ToggleButtonGroup>\n                <Row>\n                    <Col sm={4}>\n                        <FormControl type=\"text\"></FormControl> <i className=\"edit\">edit</i>\n                    </Col>\n                </Row>\n            </Container>\n            <hr />\n            <h6>\n                <button className=\"plusmenu-danger\" onClick={() => setSMClick(!SM_clicked)}>\n                    {SM_clicked ? <FaMinusCircle /> : <FaPlusCircle />} </button> &nbsp;\n                Service Marketing\n            </h6>\n\n            {SM_clicked && <SubCommuncations />}\n\n        </div>\n    )\n}\n\nconst SubCommuncations = () => {\n    const [subchannelPhone, setsubchannelPhone] = useState(false);\n    const [subchannelTextMassage, setsubchannelTextMsg] = useState(false);\n    const [subchannelAtSign, setsubchannelAtSign] = useState(false);\n    const [ConsVehicl, setConsVehicl] = useState(false);\n    const [MscEntrment, setMscEntrment] = useState(false);\n    return (\n\n        <Container fluid className=\"px-4\">\n            <ToggleButtonGroup type=\"checkbox\">\n                <Row>\n                    <Col>\n                        <ToggleButton className=\"mt-2\"\n                            id=\"toggle-check-subatsign\"\n                            type=\"checkbox\"\n                            variant={subchannelAtSign ? \"danger\" : \"light\"}\n                            checked={subchannelAtSign}\n                            value=\"1\"\n                            onChange={(e) => setsubchannelAtSign(e.currentTarget.checked)}\n                        >\n                            <i className=\"at-the-rate\"></i>\n                        </ToggleButton>\n                    </Col>\n                    <Col>\n                        <ToggleButton className=\"mt-2\"\n                            id=\"toggle-check-subphone\"\n                            type=\"checkbox\"\n                            variant={subchannelPhone ? \"danger\" : \"light\"}\n                            checked={subchannelPhone}\n                            value=\"3\"\n                            onChange={(e) => setsubchannelPhone(e.currentTarget.checked)}\n                        >\n                            <FaPhoneVolume />\n                        </ToggleButton>\n                    </Col>\n                    <Col>\n                        <ToggleButton className=\"mt-2\"\n                            id=\"toggle-check-subtextmsg\"\n                            type=\"checkbox\"\n                            variant={subchannelTextMassage ? \"danger\" : \"light\"}\n                            checked={subchannelTextMassage}\n                            value=\"4\"\n                            onChange={(e) => setsubchannelTextMsg(e.currentTarget.checked)}\n                        >\n                            <FaCommentAlt />\n                        </ToggleButton>\n                    </Col>\n                </Row>\n            </ToggleButtonGroup>\n\n            <h6>Sub sub Category 1</h6>\n            <ToggleButtonGroup type=\"checkbox\">\n                <Row>\n                    <Col>\n                        <ToggleButton className=\"mt-2 fontsmall\"\n                            id=\"toggle-check-ConsVehicl\"\n                            type=\"checkbox\"\n                            variant={ConsVehicl ? \"danger\" : \"light\"}\n                            checked={ConsVehicl}\n                            value=\"3\"\n                            onChange={(e) => setConsVehicl(e.currentTarget.checked)}\n                        >\n                            Future &amp; Concept vehicles\n                        </ToggleButton>\n                    </Col>\n                    <Col>\n                        <ToggleButton className=\"mt-2 fontsmall\"\n                            id=\"toggle-check-MscEntrment\"\n                            type=\"checkbox\"\n                            variant={MscEntrment ? \"danger\" : \"light\"}\n                            checked={MscEntrment}\n                            value=\"4\"\n                            onChange={(e) => setMscEntrment(e.currentTarget.checked)}\n                        >\n                            Music Entertinment\n                        </ToggleButton>\n                    </Col>\n                </Row>\n            </ToggleButtonGroup>\n        </Container>\n\n    )\n}\nfunction Dashboard() {\n    const clickedToyota = (elem) => {\n\n    }\n    return (\n        <div className=\"home\">\n            <Header />\n            <Container fluid className=\"dashboard-container\">\n                <ProfileCard />\n                <Navbar>\n                    <Navbar.Brand className=\"active\" name=\"Toyota\" href=\"#\" onClick={(e) => clickedToyota(e)}>Toyota</Navbar.Brand>\n                    <Navbar.Brand href=\"#\" name=\"Lexus\" onClick={(e) => clickedToyota(e)}>Lexus</Navbar.Brand>\n                </Navbar>\n                <AccordionSelection />\n            </Container>\n            <Footer />\n        </div>\n\n\n    )\n\n}\n\nexport default Dashboard;","import React from 'react';\nimport {BrowserRouter as Router,Route,Redirect,Switch}  from 'react-router-dom';\nimport './App.css';\nimport Home from './components/Home'\nimport UserForm from './components/Guest-user-form'\nimport SignIn from './components/SignIn';\nimport Dashboard from './components/Dashboard';\nfunction App() {\n  return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\" />\n          </Route>\n          <Route path=\"/home\" component={Home}/>\n          <Route path=\"/guest-details\" component={UserForm}/>\n          <Route path=\"/signin\" component={SignIn}/>\n          <Route path=\"/dashboard\" component={Dashboard}/>\n        </Switch>\n      </Router>\n      );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}